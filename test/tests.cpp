// Test definitions. Do NOT edit this file!

#include <tuple>

#define CATCH_CONFIG_MAIN // defines main() automatically
#include "catch.hpp"

#include "../CuentaBancaria.hpp" // student implementations

// =====================
// tests for exercise 1
// ---------------------

TEST_CASE("Ex1", "[Probando constructor default]")
{
    CuentaBancaria cb;
    SECTION("Verificando sus atributos iniciales")
    {
        REQUIRE(cb.getNombre()=="Dummy");
        REQUIRE(cb.getNumCuenta()=="12345");
        REQUIRE(cb.getSaldo()==0);
    }
}

// =====================
// tests for exercise 2
// ---------------------

TEST_CASE("Ex2", "[Probando constructor con parametros]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 2000.5);
    SECTION("Verificando creacion con parametros")
    {
        REQUIRE(cb1.getNombre()=="Julio Pereira Franco");
        REQUIRE(cb1.getNumCuenta()=="1231236789");
        REQUIRE(cb1.getSaldo()==2000.5);
    }
}

TEST_CASE("Ex3", "[Probando setters]")
{
    CuentaBancaria nueva;
    SECTION("Verificando cambios en los atributos")
    {
        nueva.setNombre("Carolina Castro Herrera");
        nueva.setNumCuenta("9876543210");
        nueva.setSaldo(5000);

        REQUIRE(nueva.getNombre() =="Carolina Castro Herrera");
        REQUIRE(nueva.getNumCuenta() =="9876543210");
        REQUIRE(nueva.getSaldo() == 5000);
    }
}

TEST_CASE("Ex4", "[Probando Imprimir]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 2000.5);
    SECTION("Mostrando en consola los datos de la cuenta")
    {
        cb1.imprime();
        REQUIRE(true);
    }
}

TEST_CASE("Ex5", "[Probando deposito]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 2000.5);
    SECTION("Deposito a cuenta")
    {
        cb1.deposita(550.5);
        REQUIRE(cb1.getSaldo()==2551);
    }
}

TEST_CASE("Ex6", "[Probando retiro]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 2000.5);
    SECTION("Retiro a cuenta")
    {
        int pasa = cb1.retira(50.5);
        REQUIRE(cb1.getSaldo()==1950);
        REQUIRE(pasa==1);
    }
}

TEST_CASE("Ex7", "[Probando retiro que no es viable]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 200.5);
    SECTION("Retiro a cuenta")
    {
        int pasa = cb1.retira(500.5);
        REQUIRE(cb1.getSaldo()==200.5);
        REQUIRE(pasa==0);
    }
}

TEST_CASE("Ex8", "[Transferencia viable]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 200.5);
    CuentaBancaria cb2("Carolina Castro Herrera", "98765443211", 500);
    SECTION("Transferencia viable")
    {
        int pasa = cb1.transfiere(cb2, 50.5);
        REQUIRE(cb1.getSaldo()==150);
        REQUIRE(cb2.getSaldo()==550.5);
        REQUIRE(pasa==1);
    }
}

TEST_CASE("Ex9", "[Transferencia NO viable]")
{
    CuentaBancaria cb1("Julio Pereira Franco", "1231236789", 200.5);
    CuentaBancaria cb2("Carolina Castro Herrera", "98765443211", 500);
    SECTION("Transferencia viable")
    {
        int pasa = cb1.transfiere(cb2, 500.5);
        REQUIRE(cb1.getSaldo()==200.5);
        REQUIRE(cb2.getSaldo()==500);
        REQUIRE(pasa==0);
    }
}
